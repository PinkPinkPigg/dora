// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: scheduler.proto

package gen

import (
	executor "github.com/PinkPinkPigg/dora/services/executor/gen"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *executor.TaskBase     `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"` //任务基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTaskRequest) Reset() {
	*x = AddTaskRequest{}
	mi := &file_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskRequest) ProtoMessage() {}

func (x *AddTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskRequest.ProtoReflect.Descriptor instead.
func (*AddTaskRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *AddTaskRequest) GetTask() *executor.TaskBase {
	if x != nil {
		return x.Task
	}
	return nil
}

type AddTaskRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                                                                        //是否成功执行
	Extra         map[string]string      `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //额外信息map
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTaskRespond) Reset() {
	*x = AddTaskRespond{}
	mi := &file_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskRespond) ProtoMessage() {}

func (x *AddTaskRespond) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskRespond.ProtoReflect.Descriptor instead.
func (*AddTaskRespond) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *AddTaskRespond) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddTaskRespond) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint64                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` //任务基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	mi := &file_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteTaskRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type DeleteTaskRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                                                                        //是否成功执行
	Extra         map[string]string      `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //额外信息map
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRespond) Reset() {
	*x = DeleteTaskRespond{}
	mi := &file_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRespond) ProtoMessage() {}

func (x *DeleteTaskRespond) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRespond.ProtoReflect.Descriptor instead.
func (*DeleteTaskRespond) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteTaskRespond) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteTaskRespond) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GetAllTaskInSchedulerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllTaskInSchedulerRequest) Reset() {
	*x = GetAllTaskInSchedulerRequest{}
	mi := &file_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllTaskInSchedulerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskInSchedulerRequest) ProtoMessage() {}

func (x *GetAllTaskInSchedulerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskInSchedulerRequest.ProtoReflect.Descriptor instead.
func (*GetAllTaskInSchedulerRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{4}
}

type GetAllTaskInSchedulerRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskIdList    []uint64               `protobuf:"varint,1,rep,packed,name=task_id_list,json=taskIdList,proto3" json:"task_id_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllTaskInSchedulerRespond) Reset() {
	*x = GetAllTaskInSchedulerRespond{}
	mi := &file_scheduler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllTaskInSchedulerRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskInSchedulerRespond) ProtoMessage() {}

func (x *GetAllTaskInSchedulerRespond) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskInSchedulerRespond.ProtoReflect.Descriptor instead.
func (*GetAllTaskInSchedulerRespond) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllTaskInSchedulerRespond) GetTaskIdList() []uint64 {
	if x != nil {
		return x.TaskIdList
	}
	return nil
}

var File_scheduler_proto protoreflect.FileDescriptor

const file_scheduler_proto_rawDesc = "" +
	"\n" +
	"\x0fscheduler.proto\x12\tscheduler\x1a\x0eexecutor.proto\"8\n" +
	"\x0eAddTaskRequest\x12&\n" +
	"\x04task\x18\x01 \x01(\v2\x12.executor.TaskBaseR\x04task\"\x9e\x01\n" +
	"\x0eAddTaskRespond\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x05R\x06status\x12:\n" +
	"\x05extra\x18\x02 \x03(\v2$.scheduler.AddTaskRespond.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\x11DeleteTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x04R\x06taskId\"\xa4\x01\n" +
	"\x11DeleteTaskRespond\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x05R\x06status\x12=\n" +
	"\x05extra\x18\x02 \x03(\v2'.scheduler.DeleteTaskRespond.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1e\n" +
	"\x1cGetAllTaskInSchedulerRequest\"@\n" +
	"\x1cGetAllTaskInSchedulerRespond\x12 \n" +
	"\ftask_id_list\x18\x01 \x03(\x04R\n" +
	"taskIdList2\x88\x02\n" +
	"\x10SchedulerService\x12?\n" +
	"\aAddTask\x12\x19.scheduler.AddTaskRequest\x1a\x19.scheduler.AddTaskRespond\x12H\n" +
	"\n" +
	"DeleteTask\x12\x1c.scheduler.DeleteTaskRequest\x1a\x1c.scheduler.DeleteTaskRespond\x12i\n" +
	"\x15GetAllTaskInScheduler\x12'.scheduler.GetAllTaskInSchedulerRequest\x1a'.scheduler.GetAllTaskInSchedulerRespondB\x1aZ\x18/dora/services/schedulerb\x06proto3"

var (
	file_scheduler_proto_rawDescOnce sync.Once
	file_scheduler_proto_rawDescData []byte
)

func file_scheduler_proto_rawDescGZIP() []byte {
	file_scheduler_proto_rawDescOnce.Do(func() {
		file_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scheduler_proto_rawDesc), len(file_scheduler_proto_rawDesc)))
	})
	return file_scheduler_proto_rawDescData
}

var file_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_scheduler_proto_goTypes = []any{
	(*AddTaskRequest)(nil),               // 0: scheduler.AddTaskRequest
	(*AddTaskRespond)(nil),               // 1: scheduler.AddTaskRespond
	(*DeleteTaskRequest)(nil),            // 2: scheduler.DeleteTaskRequest
	(*DeleteTaskRespond)(nil),            // 3: scheduler.DeleteTaskRespond
	(*GetAllTaskInSchedulerRequest)(nil), // 4: scheduler.GetAllTaskInSchedulerRequest
	(*GetAllTaskInSchedulerRespond)(nil), // 5: scheduler.GetAllTaskInSchedulerRespond
	nil,                                  // 6: scheduler.AddTaskRespond.ExtraEntry
	nil,                                  // 7: scheduler.DeleteTaskRespond.ExtraEntry
	(*executor.TaskBase)(nil),            // 8: executor.TaskBase
}
var file_scheduler_proto_depIdxs = []int32{
	8, // 0: scheduler.AddTaskRequest.task:type_name -> executor.TaskBase
	6, // 1: scheduler.AddTaskRespond.extra:type_name -> scheduler.AddTaskRespond.ExtraEntry
	7, // 2: scheduler.DeleteTaskRespond.extra:type_name -> scheduler.DeleteTaskRespond.ExtraEntry
	0, // 3: scheduler.SchedulerService.AddTask:input_type -> scheduler.AddTaskRequest
	2, // 4: scheduler.SchedulerService.DeleteTask:input_type -> scheduler.DeleteTaskRequest
	4, // 5: scheduler.SchedulerService.GetAllTaskInScheduler:input_type -> scheduler.GetAllTaskInSchedulerRequest
	1, // 6: scheduler.SchedulerService.AddTask:output_type -> scheduler.AddTaskRespond
	3, // 7: scheduler.SchedulerService.DeleteTask:output_type -> scheduler.DeleteTaskRespond
	5, // 8: scheduler.SchedulerService.GetAllTaskInScheduler:output_type -> scheduler.GetAllTaskInSchedulerRespond
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_scheduler_proto_init() }
func file_scheduler_proto_init() {
	if File_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scheduler_proto_rawDesc), len(file_scheduler_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scheduler_proto_goTypes,
		DependencyIndexes: file_scheduler_proto_depIdxs,
		MessageInfos:      file_scheduler_proto_msgTypes,
	}.Build()
	File_scheduler_proto = out.File
	file_scheduler_proto_goTypes = nil
	file_scheduler_proto_depIdxs = nil
}
